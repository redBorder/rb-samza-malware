package net.redborder.samza.processors;

import com.google.common.base.Joiner;
import net.redborder.samza.enrichments.EnrichManager;
import net.redborder.samza.store.StoreManager;
import net.redborder.samza.util.constants.Constants;
import net.redborder.samza.util.constants.Dimension;
import org.apache.samza.config.Config;
import org.apache.samza.system.OutgoingMessageEnvelope;
import org.apache.samza.system.SystemStream;
import org.apache.samza.task.MessageCollector;
import org.apache.samza.task.TaskContext;

import java.util.Arrays;
import java.util.List;
import java.util.Map;

public class MailGwProcessor extends Processor<Map<String, Object>> {
    private static final SystemStream OUTPUT_STREAM = new SystemStream("kafka", Constants.ENRICHMENT_MALWARE_OUTPUT_TOPIC);

    public MailGwProcessor(StoreManager storeManager, EnrichManager enrichManager, Config config, TaskContext context) {
        super(storeManager, enrichManager, config, context);
    }

    @Override
    public void process(Map<String, Object> message, MessageCollector collector) {
        Map<String, Object> messageEnrichmentStore = this.storeManager.enrich(message);

        List<String> emailSenders = (List<String>) messageEnrichmentStore.remove(Dimension.EMAIL_SENDERS);
        List<String> emailDestinations = (List<String>) messageEnrichmentStore.remove(Dimension.EMAIL_DESTINATIONS);
        List<String> urls = (List<String>) messageEnrichmentStore.remove(Dimension.URLS);

        messageEnrichmentStore.put(Dimension.URLS, Joiner.on(",").join(urls));

        for (String emailSender : emailSenders) {
            messageEnrichmentStore.put(Dimension.EMAIL_SENDER, emailSender);
            for (String emailDest : emailDestinations) {
                messageEnrichmentStore.put(Dimension.EMAIL_DESTINATION, emailDest);
                collector.send(new OutgoingMessageEnvelope(OUTPUT_STREAM, null, messageEnrichmentStore));
            }
        }
    }

    @Override
    public String getName() {
        return "mail-gw";
    }
}
