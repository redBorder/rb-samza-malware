package net.redborder.samza.processors;

import junit.framework.TestCase;
import net.redborder.samza.enrichments.EnrichManager;
import net.redborder.samza.store.StoreManager;
import net.redborder.samza.stores.AerospikeStore;
import net.redborder.samza.util.MockKeyValueStore;
import net.redborder.samza.util.MockMessageCollector;
import net.redborder.samza.util.MockTaskContext;
import org.apache.samza.config.Config;
import org.apache.samza.task.TaskContext;
import org.codehaus.jackson.map.ObjectMapper;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.runner.RunWith;
import org.junit.Test;
import org.mockito.Mock;
import org.mockito.invocation.InvocationOnMock;
import org.mockito.runners.MockitoJUnitRunner;
import org.mockito.stubbing.Answer;

import java.util.HashMap;
import java.util.Map;

import static org.mockito.Matchers.anyMap;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

@RunWith(MockitoJUnitRunner.class)
public class ScoresProcessorTest extends TestCase {

    static MockKeyValueStore storeScores;

    ObjectMapper mapper = new ObjectMapper();

    static ScoresProcessor scoresProcessor;
    static EnrichManager enrichManager;

    @Mock
    static Config config;

    @Mock
    static StoreManager storeManager;

    @Mock
    static AerospikeStore mockAerospikeStore;

    static TaskContext taskContext;

    String mailEvent = "{\"type\":\"mail_gateway\"," +
            "\"sensor_name\":\"rmail01\"," +
            "\"email_id\":\"6715029184651088572_27951\"," +
            "\"subject\":\"This is a test hsf.com asdf\"," +
            "\"email_sender\":\"angelmm@redborder.net\"," +
            "\"email_destinations\":[\"ejimenez@redborder.net\"]," +
            "\"timestamp\":1450944938," +
            "\"headers\":\"" +
            "<Return-Path: <angelmm@redborder.net>>, " +
            "<Received: from localhost.localdomain (unknown [10.0.30.212]) by rmail01.localdomain (Postfix) with ESMTP id 03A6EBFDD2 for <ejimenez@redborder.net>; Thu, 24 Dec 2015 03:15:38 -0500 (EST)>, " +
            "<Date: Thu, 24 Dec 2015 09:15:38 +0100>, " +
            "<From: angelmm@redborder.net>, " +
            "<To: ejimenez@redborder.net>, " +
            "<Message-ID: <567ba9aad4ebc_af9e3fe81cc57be895521@MacBook-Pro.redborder.lan.mail>>, " +
            "<Subject: This is a test hsf.com asdf>, " +
            "<Mime-Version: 1.0>, " +
            "<Content-Type: multipart/mixed; boundary=\\\"--==_mimepart_567ba9aad4287_af9e3fe81cc57be895490\\\"; charset=UTF-8>, " +
            "<Content-Transfer-Encoding: 7bit>\"," +
            "\"src\":\"10.0.30.212\"," +
            "\"action\":\"FORWARD\"," +
            "\"urls\":[\"http://estoesunmalware-como-una-casa.com\"," +
            "\"http://redmine.redborder.lan/projects\\\"\"," +
            "\"http://redmine.redborder.lan/issues'\"]," +
            "\"files\":[{\"hash\":\"039058cd0f349c8987a4a61a3de12660b78007235126ee75228933fda2343e4f\"," +
            "\"name\":\"changelog.rb\"," +
            "\"probe_score\":-1," +
            "\"status\":\"UNKNOWN\"}]}";

    @BeforeClass
    public static void initTest(){
        storeScores = new MockKeyValueStore();
        taskContext = new MockTaskContext();
        enrichManager = new EnrichManager();

        config = mock(Config.class);
        storeManager = mock(StoreManager.class);
        mockAerospikeStore = mock(AerospikeStore.class);

        when(storeManager.getExtension("aerospike")).thenReturn(mockAerospikeStore);

        scoresProcessor = new ScoresProcessor(storeManager, enrichManager, config, taskContext);
    }

    @Before
    public void cleanStore(){
        storeScores.flush();
    }

    @Test
    public void processEmptyMsg(){
        MockMessageCollector collector = new MockMessageCollector();
        Map<String, Object> message = new HashMap<>();

        scoresProcessor.process(message, collector);

        assertTrue(collector.getResult().isEmpty());
    }

    @Test
    public void getNameTest(){
        assertEquals("ANALYSIS", scoresProcessor.getName());
    }

}
